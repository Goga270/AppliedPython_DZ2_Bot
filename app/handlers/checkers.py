from aiogram import types, Router
from aiogram.filters import Command
from utils import helpers
import logging

router = Router()
logger = logging.getLogger(__name__)

@router.message(Command('check_progress'))
async def check_progress_command(message: types.Message):
    logger.info("–í—ã–∑–≤–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /check_progress")
    user_id = str(message.from_user.id)
    current_data = helpers.load_data()
    calories_goal = helpers.get_calories_goal(user_id)
    water_goal = helpers.calculate_water_goal(user_id)
    if user_id in current_data:
        await message.answer(
            f"üìä –ü—Ä–æ–≥—Ä–µ—Å—Å:\n"
            f"–í–æ–¥–∞:\n"
            f"- –í—ã–ø–∏—Ç–æ: {current_data[user_id]['water_ml']} –º–ª –∏–∑ {water_goal} –º–ª.\n"
            f"- –û—Å—Ç–∞–ª–æ—Å—å: {int(water_goal) - int(current_data[user_id]['water_ml'])} –º–ª.\n"
            f"–ö–∞–ª–æ—Ä–∏–∏:\n"
            f"- –ü–æ—Ç—Ä–µ–±–ª–µ–Ω–æ: {current_data[user_id]['calories']} –∫–∫–∞–ª –∏–∑ {calories_goal} –∫–∫–∞–ª.\n"
            f"- –°–æ–∂–∂–µ–Ω–æ: {current_data[user_id]['burned_calories']} –∫–∫–∞–ª.\n"
            f"- –ë–∞–ª–∞–Ω—Å: {int(current_data[user_id]['calories']) - int(current_data[user_id]['burned_calories'])} –∫–∫–∞–ª.\n")
    else:
        await message.answer(f"–û—à–∏–±–∫–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ")

def register_handlers(dp):
    dp.include_router(router)